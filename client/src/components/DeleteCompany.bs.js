// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var GQL = require("../GQL.bs.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Pervasives = require("bs-platform/lib/js/pervasives.js");

function DeleteCompany(Props) {
  var id = Props.id;
  var match = React.useState(function () {
        return id;
      });
  var setId = match[1];
  var match$1 = Curry.app(GQL.DeleteCompanyMutation.use, [
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined
      ]);
  var result = match$1[1];
  var mutate = match$1[0];
  var handleSubmit = function ($$event) {
    $$event.preventDefault();
    Curry._8(mutate, undefined, undefined, undefined, undefined, undefined, undefined, undefined, {
          id: id
        });
    
  };
  var idStr = String(id);
  var match$2 = result.data;
  if (!result.called) {
    return React.createElement(React.Fragment, undefined, "Not called... ", React.createElement("form", {
                    onSubmit: handleSubmit
                  }, React.createElement("h2", undefined, "Delete Id: " + (idStr + "?")), React.createElement("div", {
                        className: "form-field"
                      }, React.createElement("input", {
                            placeholder: idStr,
                            value: idStr,
                            onChange: (function ($$event) {
                                return Curry._1(setId, $$event.target.value);
                              })
                          })), React.createElement("div", {
                        className: "form-field"
                      }, React.createElement("input", {
                            type: "submit",
                            value: "Delete"
                          }))));
  }
  if (result.loading) {
    return "Loading...";
  }
  if (match$2 !== undefined && result.error === undefined) {
    var deletedSuccess = match$2.deleteCompany !== undefined;
    return React.createElement("p", undefined, "Company id: \"" + (idStr + ("\" deleted:" + Pervasives.string_of_bool(deletedSuccess))));
  }
  var error = result.error;
  return React.createElement(React.Fragment, undefined, "Error loading data", error !== undefined ? ": " + error.message : null);
}

var make = DeleteCompany;

exports.make = make;
/* GQL Not a pure module */
